// A LOT OF THE GENERATION CODE HAS BEEN STOLEN AND TRANSLATED FROM https://github.com/openai/dallify-discord-bot

const { SlashCommandBuilder, AttachmentBuilder } = require('discord.js');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('paint')
		.setDescription('Uses openAI\'s DALLE to imagine anything you want')
        .addStringOption(option =>
            option
                .setName('prompt')
                .setRequired(true)
                .setDescription('The prompt you want to generate an image based off of'))
        .addStringOption(option =>
            option.setName('resolution')
                .setDescription('The resolution of the output image')
                .setRequired(false)
                .addChoices(
                  { name: '1024x1024', value: '1024x1024' },
                  { name: '1792x1024', value: '1792x1024' },
                  { name: '1024x1792', value: '1024x1792' },
                ))
        .addStringOption(option =>
          option.setName('style')
              .setDescription('The style of the output image')
              .setRequired(false)
              .addChoices(
                { name: 'vivid', value: 'vivid' },
                { name: 'natural', value: 'natural' },
              ))
        .addStringOption(option =>
          option.setName('definition')
              .setDescription('The definition of the output image')
              .setRequired(false)
              .addChoices(
                { name: 'standard', value: 'standard' },
                { name: 'HD', value: 'HD' },
              )),
	async execute(interaction) {
    const {performDatabaseOperation, pushDBImage } = require('../mitsuri.js'); // NOTE: has to be in here, fuck slash command builder

    const uuid = interaction.user.id;
    const prompt = interaction.options.getString("prompt");
    const count = 1;
    const resolution = interaction.options.getString("resolution") ?? "1024x1024";
    const style = interaction.options.getString("style") ?? "vivid";
    const HD = interaction.options.getBoolean("HD") ? "hd" : "standard";

    if (prompt == null) {
      await interaction.reply("Prompt must exist.");
    }

    await interaction.deferReply(); // tell discord we have acknowledged but need some time to finish this reply

    // get openai object
    const { openai } = require('..'); // this has to stay inside the execute because outside of the module export it appears as an export to the deploy command script
    
    try{
      const completion = await openai.createImage({
        model: "dall-e-3",
        prompt: prompt,
        n: count,
        size: resolution,
        quality: HD,
        style: style,
        user: interaction.user.id // annotate request with individual user for safety purposes
      });
      
      image_url = completion.data.data[0].url;
      
      const attachment = new AttachmentBuilder(image_url, { name: 'painting.png' })
      let msg = await interaction.followUp({content:`**Prompt:** ${prompt}\n**Generated by:** <@${uuid}>\n`,files:[attachment]});

      const cdnURL = msg.attachments.entries().next().value[1].proxyURL;
      const dbop = await pushDBImage(uuid,prompt,cdnURL,resolution,style,HD,"dall-e-3"); // try pushing db record
    }
    catch (e) {
      var result = {};
      const response = e.response;
      if (response) {
        if (response.status == 429) {
          result = {
            content: `**Something went wrong!** I am slightly overworked.😮‍💨 Please wait a few minutes and I\'ll be good to go!\n**Your prompt was:** ${prompt}`,
          };
        } else if (response.status >= 500 && response.status < 600) {
          result = {
            content: `**Something went wrong!** The server is experiencing issues. Please try again later.\n**Your prompt was:** ${prompt}`,
          };
        } else if (response.data && response.data.error) {
          // custom error keys from the openai api
          result = {
            content: `**Something went wrong!** ${response.data.error.message}  (${response.data.error.type}) \n**Your prompt was:** ${prompt}`,
          };
        } else {
          result = {
            content: `**Something went wrong!** ${response.statusText}  (${response.status}) \n**Your prompt was:** ${prompt}`,
          };
        }
      } else {
        result = {
          content: `**Something went wrong!** ${error} \n**Your prompt was:** ${prompt}`,
        };
      }
      interaction.followUp(result);
    } 
	},
};